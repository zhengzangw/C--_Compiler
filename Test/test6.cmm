/** test6
 *  correct
 *	AST test
 */

//265MS	 1424K
float pi;
struct point
{ //点、向量
    float x, y;
};
int point(){}
int point(float a, float b){
    x = a;
    y = b;
}
int operator(float p){
    return point(x-p.x,y-p.y);
}

int cmp(int p1,int p2){
    return (p1.x<p2.x)||(p1.x==p2.x && p1.y<p2.y);
}
float w,ans;
float len(float p){
    return sqrt(p.x*p.x+p.y*p.y);
}
float dis(float p,float v){
    return abs(p.x*(p.y-v.y)-p.y*(p.x-v.x))/len(v);
}
float proj(float p,float v){
    return (p.x*v.x+p.y*v.y)/len(v);
}

int main(){
    float pi = acos(-1);
    int T,x1,x2,x3,y1,y2,y3,wid;
    //FILE *fp = fopen("/Users/Fermat/Downloads/multi8/data/b.in","r");
    //FILE *fout = fopen("/Users/Fermat/Downloads/multi8/data/b.out","w");
    while (T){
        ans = DBL_MAX;
        w = wid;
        p[0] = point(x1,y1); p[1] = point(x2,y2); p[2] = point(x3,y3);
        sort(p,p+3,cmp);
        while (next_permutation(p,p+3,cmp))
        {
            ans = min(ans,test(p[1]-p[0],p[2]-p[0]));
        } 
        while (next_permutation(p,p+3,cmp))
        {
            ans = min(ans,test(p[1]-p[0],p[2]-p[0]));
        } 
        if (ans==DBL_MAX) printf();
    }
    pi = acos(-1);
    //fclose(fp);
    //fclose(fout);
    return 0;
}